@model AuthenticationModel


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "authForm", role = "form" })) {
    @Html.ValidationSummary("", new { @class = "text-danger" })

    @*
		Hidden fields used to pass data from the action to the "signature form" javascript (see below) and
		vice-versa.
	*@
    @Html.HiddenFor(m => m.CertificateBase64, new { id = "certificateField" })
    @Html.HiddenFor(m => m.NonceBase64, new { id = "nonceField" })
    @Html.HiddenFor(m => m.DigestAlgorithm, new { id = "digestAlgorithmField" })
    @Html.HiddenFor(m => m.SignatureBase64, new { id = "signatureField" })
    <div style="margin-top:30px">
        <div class="col-lg-5 m-1 card">
            <div class="card-body">
                <h2 class="card-title fw-bold cstm-font-clr">Informações do Médico</h2>
                <h6 class="card-text mb-3">Informe os dados do médico que irá assinar esse documento:</h6>
                <label class="mb-3 fs-5" for="certificateSelect">Acesse com o seu <b>certificado digital</b>:</label>
                <div class="form-group mb-3 d-flex align-items-center">
                    <div class="input-group">
                        <select id="certificateSelect" class="select-cert-with-arrow form-control"></select>
                        <div class="">
                            <button id="refreshButton" type="button" class="custom-btn-refresh h-100">
                                <img src="~/Vector.svg" />
                            </button>
                        </div>
                    </div>
                </div>
                <div class="separator mb-2">
                    <div class="line"></div>
                    <div class="text">OU</div>
                    <div class="line"></div>
                </div>
                <form method="post" asp-controller="CloudAuth">
                    <div class="form-group mb-5">
                        <label class="mb-3 fs-5" for="cpfCnpjInput">Acesse com o seu <b>certificado em nuvem</b>:</label>
                        <input id="cpfCnpjInput" type="text" class="w-100" placeholder="Informe seu CPF ou CNPJ">

                    </div>
                </form>


                <button id="signInButton" type="button" class="btn btn-primary btn-clr ml-2 w-100">Criar prescrição</button>
            </div>
        </div>
    </div>

}


@section Scripts {

    @*
		The file below contains the JS lib for accessing the Web PKI component. For more information, see:
		https://webpki.lacunasoftware.com/#/Documentation
	*@
    <script type="text/javascript" src="https://cdn.lacunasoftware.com/libs/web-pki/lacuna-web-pki-2.14.3.min.js"
            integrity="sha256-P92LF1ePw0qwnmbefDpDiMcr8rmwFkcxVX+utanmlek="
            crossorigin="anonymous"></script>

    @*
		The file below contains the logic for calling the Web PKI component. It is only an example, feel
		free to alter it to meet your application's needs. You can also bring the code into the javascript
		block below if you prefer.
	*@
    <script>
        $(document).ready(function ($) {
            // Once the page is ready, we call the init() function on the javascript code
            // (see authentication-form.js).
            authenticationForm.init({
                form: $('#authForm'),                             // The form that should be submitted when the operation is completed.
                certificateSelect: $('#certificateSelect'),       // The <select> element (combo box) to list the certificates.
                signInButton: $('#signInButton'),                 // The button "Sign In" that initiates the operation.
                refreshButton: $('#refreshButton'),               // The "refresh" button.
                certificateField: $('#certificateField'),         // The "certificate" content.
                nonceField: $('#nonceField'),                     // The "nonce" to be signed.
                digestAlgorithmField: $('#digestAlgorithmField'), // The "digest algorithm" to be used on the signature.
                signatureField: $('#signatureField')              // The "signature" computed.
            });
            @*
            Other stuff unrelated to webpki load
            *@

            $(window).keydown(function(event){
                if(event.keyCode == 13) {
                  event.preventDefault(); // prevents POST method to happen when pressing ENTER
                  return false;
                }
              });
            $('#cpfCnpjInput').on('input', disableWebPki);
            var cleave = new Cleave('#cpfCnpjInput', {
                blocks: [3, 3, 3, 2], // CPF mask
                delimiters: ['.', '.', '-'],
                uppercase: true,
                delimiterLazyShow: true
            });
            $('#cpfCnpjInput').on('input', function () {
                var inputValue = $(this).val();
                var rawValue = inputValue.replace(/[.-\/]/g, '');
                var rawValueLen = inputValue.replace(/[.-\/]/g, '').length;
                console.log(rawValue);
                // Check if the input is likely to be a CNPJ (9 digits without dots and hyphens)
                if (rawValueLen > 11) {
                    cleave.destroy();
                    cleave = new Cleave('#cpfCnpjInput', {
                        blocks: [2, 3, 3, 4, 2], // CNPJ mask
                        delimiters: ['.', '.', '/', '-'],
                        uppercase: true,
                        delimiterLazyShow: true
                    });
                } else {
                    cleave.destroy();
                    $('#cpfCnpjInput').val('');
                    $('#cpfCnpjInput').val(rawValue);
                    cleave = new Cleave('#cpfCnpjInput', {
                        blocks: [3, 3, 3, 2], // CPF mask
                        delimiters: ['.', '.', '-'],
                        uppercase: true,
                        delimiterLazyShow: true
                    });
                }
            });
        });

        function disableWebPki() {
            // Due to many fields requiring validation, it is better to trim their values outside of "if" statement
            var cpfValue = $('#cpfCnpjInput').val().trim();
            if (cpfValue !== "") {
                $('#certificateSelect').attr('disabled', true);
            } else {
                $('#certificateSelect').attr('disabled', false);
            }
        }

    </script>
}
