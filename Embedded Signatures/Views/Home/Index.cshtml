@model Embedded_Signatures.Models.CreatePrescriptionModel
@{
    ViewData["Title"] = "Prescription";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<div>
    <form>
        <div class="container" style="margin-top:30px">
            <div id="signin">
                <div class="row justify-content-center">
                    <div class="col-lg-4 mx-auto">
                        <h1 class="text-md-center">Criação de prescrição</h1>
                        <h5 id="infoData" class="text-md-center">Informe os dados do certificado:</h5>
                        <hr />
                        <div class="form-group">
                            <div class="row">
                                <div class="text-md-center">
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" id="data" onclick="hideFormEntries(this)" />
                                        <label class="form-check-label" for="teste">Certificado de Teste</label>
                                    </div>
                                    <div class="row">
                                        <a href="https://docs.lacunasoftware.com/pt-BR/articles/pki-guide/test-certs.html" target="_blank">Como usar certificado de teste?</a>
                                        @*Commented for now, need to add test-cert with Pierre de Fermat only*@
                                        @*<a href="https://docs.lacunasoftware.com/pt-br/content/test-certs.zip"> Fazer download dos certificados de teste </a>*@
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div id="box">
                                <div class="row justify-content-center mb-2">
                                    @Html.TextBoxFor(m =>m.Name, new{id = "name", placeholder="Nome",@class= "form-control form-rounded transparent-input" })
                                </div>
                                <div class="row justify-content-center mb-2">
                                    @Html.TextBoxFor(m =>m.Email, new{id = "email" ,placeholder="Email",@class= "form-control form-rounded transparent-input" })
                                </div>
                                <div class="row justify-content-center mb-4">
                                    @Html.TextBoxFor(m =>m.Identifier, new{id = "cpf" ,placeholder="CPF",@class= "form-control form-rounded transparent-input" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="text-md-center">
                            <input type="button" value="Criar prescrição" onclick="showApp()" placeholder="Criar prescrição" class="btn btn-primary btn-clr col-lg-3" />
                        </div>
                    </div>
                </div>

            </div>
            <div id="main" hidden class="container" style="margin-top:30px">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row justify-content-center">
                            <div class="col-sm-6 mb-4">
                                <h1 class="text-md-center">Criação de prescrição</h1>
                                <h5 id="infoData" class="text-md-center">Informe os dados do paciente para começar:</h5>
                            </div>
                        </div>
                    </div>
                    <div id="form-hide">
                        <div class="form-group" align="center">
                            <div class="row-cols-4 mb-2">
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m =>m.PatientName, new{ id="paciente",placeholder="Nome do paciente",
                                    onkeyup = "enableButton()",
                                    @class= "form-control form-rounded transparent-input" })
                                </div>
                            </div>
                            <div class="row-cols-4 mb-3">
                                <div class="col-lg-4">
                                    @Html.DropDownListFor(m =>m.MedicationName,new List<SelectListItem>{
                                    new SelectListItem{Text ="Ibuprofeno", Value = "Ibuprofeno 6500mg _______________ 15cp"},
                                    new SelectListItem{Text ="Rivotril"  , Value = "Rivotril   1255mg _______________ 2cx"},
                                    new SelectListItem{Text ="Omeprazol" , Value = "Omeprazol    20mg _______________ 1cap"},
                                    }, "Medicamento", new { id = "medicamento", onchange = "enableButton()", @class= "select-wrapper form-select transparent-input"})
                                </div>
                            </div>
                            <div class="my-lg-3">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="ElectronicSignature" />
                                    <label class="form-check-label" for="ElectronicSignature">Assinatura Eletronica</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" id="DocumentPreview" checked />
                                    <label class="form-check-label" for="DocumentPreview">Ver Documento</label>
                                </div>
                            </div>
                            <div class="row-cols-4">
                                <div class="col-lg-3 mb-2">
                                    <input id="start" type="button" disabled value="Assinar" onclick="startSignature(this)" placeholder="Assinar"
                                           class="form-control btn btn-primary btn-clr" />
                                </div>
                                <div class="col-lg-4 mt-3">
                                    <div id="loadingHeader" class="center-div" style="display: none">
                                        <div class="inner-div">
                                            <div class="loader"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class=row-cols-auto id="whiteboard" hidden>
    <div class="card">
        <div class="card-body">
            <div id="embed-container" class="frame-container"></div>
        </div>
    </div>
</div>
<div class="row-cols-auto">
    <div class="col-sm-12">
        <div class="row justify-content-center" id="afterSigned" style="display: none">
            <div class="container col-lg-6 p-3 my-3 border rounded-3 bg-white">
                <div class="row justify-content-center">
                    <div class="row justify-content-center p-5">
                        <div class="col-md-auto">
                            <img src="~/Group 159ok.png" />
                        </div>
                    </div>
                    <div class="col-auto">
                        <h4> Sua prescrição foi criada com sucesso!</h4>
                    </div>
                    <div class="btn-group col-lg-8">
                        <button class="btn btn-primary rounded m-2" placeholder="Começar" onclick="download()" type="button">BAIXAR PRESCRIÇÃO</button>
                        <a class="btn btn-outline-primary rounded btn-custom-outline m-2" asp-area="" asp-controller="Home" asp-action="Index" role="button">NOVA PRESCRIÇÃO</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
<script>
    
    var documentId = '';

    function showApp() {
        $('#main').attr('hidden', false);
        $('#main').show();
        $('#signin').hide();
    }

    function sign(data, allowPreviewDocument) {
        hideButtons();

        var widget = allowPreviewDocument ? new LacunaSignerWidget() : new LacunaSignerWidget({ disableDocumentPreview: true });
        widget.render(data, 'embed-container');
        widget.on(widget.events.documentSigned, function(e) {
             documentId = e.id;
            // Removes the widget
            $('#embed-container').remove();
            // Container after signature
            $('#afterSigned').show();
            $('#whiteboard').hide();
        });
    }

    function startSignature(elem) {

        // Patient name
        var valuePatient = $('#paciente').val();

        // Signer name
        var nameValue = $('#name').val() || 'Pierre de Fermat';

        // Signer email
        var emailValue = $('#email').val() || 'test@lacunasoftware.com';
        
        // Signer CPF
        var identifierValue = $('#cpf').val() || '47363361886';


        // Medication name
        var medicationValue = $('#medicamento').val();

        // Loading while the document is created
        var loadingHidden = $('#loadingHeader');
        loadingHidden.show();

        // set to true if the user wants to see preview of the document
        allowPreviewDocument = $('#DocumentPreview').prop('checked');
        allowElectronicSignature = $('#ElectronicSignature').prop('checked');

        $.ajax({
            type: 'POST',
            url: '/Home/Prescription',
            data: JSON.stringify({ PatientName: valuePatient, Name: nameValue, Email: emailValue, MedicationName: medicationValue, Identifier: identifierValue, AllowElectronicSignature: allowElectronicSignature }),
            success: function(data) {
                if (data) {
                    loadingHidden.hide();
                    sign(data.embedUrl, allowPreviewDocument);
                    elem.style.visibility = 'hidden';
                } else {
                    onError(elem);
                }
            },
            error: function() {
                onError(elem);
            },
            contentType: "application/json",
            dataType: 'json'
        });
    }

    function onError(elem) {
        $('#loadingHeader').hide();
        alert('Erro ao criar prescrição');
    }

    function hideButtons() {
        $('infoData').prop('hidden', true);
        $('#form-hide').prop('hidden', true);
        $('#whiteboard').removeAttr('hidden');
        $('#whiteboard').removeAttr('style').show();
    }

    function enableButton() {
        if (($('paciente').val() && $('medicamento').val()) !== "") {
            $('#start').removeAttr('disabled');
        } else {
            $('#start').attr('disabled', true);
        }

    }

    function download() {
        if (documentId != null) {
            $.ajax({
                type: 'GET',
                url: '/Home/Prescription?id=' + documentId,
                dataType: 'json',
                success: function(data) {
                    if (data.url) {
                        window.location.href = data.url;
                    }
                },
                error: function() {
                    alert('Erro ao baixar prescrição');
                }
            });
        }
    }

    function hideFormEntries(elem){
        if(elem.checked){
            $('#box').hide();
        } else {
            $('#box').show();
        }
    }

</script>
}








